Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.New(outputKind As Microsoft.CodeAnalysis.OutputKind, moduleName As String = Nothing, mainTypeName As String = Nothing, scriptClassName As String = "Script", globalImports As System.Collections.Generic.IEnumerable(Of Microsoft.CodeAnalysis.VisualBasic.GlobalImport) = Nothing, rootNamespace As String = Nothing, optionStrict As Microsoft.CodeAnalysis.VisualBasic.OptionStrict = Microsoft.CodeAnalysis.VisualBasic.OptionStrict.Off, optionInfer As Boolean = True, optionExplicit As Boolean = True, optionCompareText As Boolean = False, parseOptions As Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions = Nothing, embedVbCoreRuntime As Boolean = False, optimizationLevel As Microsoft.CodeAnalysis.OptimizationLevel = Microsoft.CodeAnalysis.OptimizationLevel.Debug, checkOverflow As Boolean = True, cryptoKeyContainer As String = Nothing, cryptoKeyFile As String = Nothing, cryptoPublicKey As System.Collections.Immutable.ImmutableArray(Of Byte) = Nothing, delaySign As Boolean? = Nothing, platform As Microsoft.CodeAnalysis.Platform = Microsoft.CodeAnalysis.Platform.AnyCpu, generalDiagnosticOption As Microsoft.CodeAnalysis.ReportDiagnostic = Microsoft.CodeAnalysis.ReportDiagnostic.Default, specificDiagnosticOptions As System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, Microsoft.CodeAnalysis.ReportDiagnostic)) = Nothing, concurrentBuild As Boolean = True, deterministic As Boolean = False, xmlReferenceResolver As Microsoft.CodeAnalysis.XmlReferenceResolver = Nothing, sourceReferenceResolver As Microsoft.CodeAnalysis.SourceReferenceResolver = Nothing, metadataReferenceResolver As Microsoft.CodeAnalysis.MetadataReferenceResolver = Nothing, assemblyIdentityComparer As Microsoft.CodeAnalysis.AssemblyIdentityComparer = Nothing, strongNameProvider As Microsoft.CodeAnalysis.StrongNameProvider = Nothing, publicSign As Boolean = False, reportSuppressedDiagnostics As Boolean = False, metadataImportOptions As Microsoft.CodeAnalysis.MetadataImportOptions = Microsoft.CodeAnalysis.MetadataImportOptions.Public) -> Void
*REMOVED*Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.New(outputKind As Microsoft.CodeAnalysis.OutputKind, moduleName As String = Nothing, mainTypeName As String = Nothing, scriptClassName As String = "Script", globalImports As System.Collections.Generic.IEnumerable(Of Microsoft.CodeAnalysis.VisualBasic.GlobalImport) = Nothing, rootNamespace As String = Nothing, optionStrict As Microsoft.CodeAnalysis.VisualBasic.OptionStrict = Microsoft.CodeAnalysis.VisualBasic.OptionStrict.Off, optionInfer As Boolean = True, optionExplicit As Boolean = True, optionCompareText As Boolean = False, parseOptions As Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions = Nothing, embedVbCoreRuntime As Boolean = False, optimizationLevel As Microsoft.CodeAnalysis.OptimizationLevel = Microsoft.CodeAnalysis.OptimizationLevel.Debug, checkOverflow As Boolean = True, cryptoKeyContainer As String = Nothing, cryptoKeyFile As String = Nothing, cryptoPublicKey As System.Collections.Immutable.ImmutableArray(Of Byte) = Nothing, delaySign As Boolean? = Nothing, platform As Microsoft.CodeAnalysis.Platform = Microsoft.CodeAnalysis.Platform.AnyCpu, generalDiagnosticOption As Microsoft.CodeAnalysis.ReportDiagnostic = Microsoft.CodeAnalysis.ReportDiagnostic.Default, specificDiagnosticOptions As System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, Microsoft.CodeAnalysis.ReportDiagnostic)) = Nothing, concurrentBuild As Boolean = True, deterministic As Boolean = False, xmlReferenceResolver As Microsoft.CodeAnalysis.XmlReferenceResolver = Nothing, sourceReferenceResolver As Microsoft.CodeAnalysis.SourceReferenceResolver = Nothing, metadataReferenceResolver As Microsoft.CodeAnalysis.MetadataReferenceResolver = Nothing, assemblyIdentityComparer As Microsoft.CodeAnalysis.AssemblyIdentityComparer = Nothing, strongNameProvider As Microsoft.CodeAnalysis.StrongNameProvider = Nothing, publicSign As Boolean = False, reportSuppressedDiagnostics As Boolean = False) -> Void
Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.New(outputKind As Microsoft.CodeAnalysis.OutputKind, moduleName As String, mainTypeName As String, scriptClassName As String, globalImports As System.Collections.Generic.IEnumerable(Of Microsoft.CodeAnalysis.VisualBasic.GlobalImport), rootNamespace As String, optionStrict As Microsoft.CodeAnalysis.VisualBasic.OptionStrict, optionInfer As Boolean, optionExplicit As Boolean, optionCompareText As Boolean, parseOptions As Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions, embedVbCoreRuntime As Boolean, optimizationLevel As Microsoft.CodeAnalysis.OptimizationLevel, checkOverflow As Boolean, cryptoKeyContainer As String, cryptoKeyFile As String, cryptoPublicKey As System.Collections.Immutable.ImmutableArray(Of Byte), delaySign As Boolean?, platform As Microsoft.CodeAnalysis.Platform, generalDiagnosticOption As Microsoft.CodeAnalysis.ReportDiagnostic, specificDiagnosticOptions As System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of String, Microsoft.CodeAnalysis.ReportDiagnostic)), concurrentBuild As Boolean, deterministic As Boolean, xmlReferenceResolver As Microsoft.CodeAnalysis.XmlReferenceResolver, sourceReferenceResolver As Microsoft.CodeAnalysis.SourceReferenceResolver, metadataReferenceResolver As Microsoft.CodeAnalysis.MetadataReferenceResolver, assemblyIdentityComparer As Microsoft.CodeAnalysis.AssemblyIdentityComparer, strongNameProvider As Microsoft.CodeAnalysis.StrongNameProvider, publicSign As Boolean, reportSuppressedDiagnostics As Boolean) -> Void
Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithMetadataImportOptions(value As Microsoft.CodeAnalysis.MetadataImportOptions) -> Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions
Microsoft.CodeAnalysis.VisualBasic.LanguageVersion.VisualBasic15_7 = 1507 -> Microsoft.CodeAnalysis.VisualBasic.LanguageVersion
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.EnumFlag() -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.EnumFlags() -> Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.OperatorToken() -> Microsoft.CodeAnalysis.SyntaxToken
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.Update(enumFlags As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax, operatorToken As Microsoft.CodeAnalysis.SyntaxToken, enumFlag As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.WithEnumFlag(enumFlag As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.WithEnumFlags(enumFlags As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.WithOperatorToken(operatorToken As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind.Clear = 3 -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind.IsAny = 4 -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind.IsSet = 1 -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind.None = 0 -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind
Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind.Set = 2 -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperatorKind
Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FlagsEnumClearToken = 796 -> Microsoft.CodeAnalysis.VisualBasic.SyntaxKind
Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FlagsEnumIsAnyToken = 798 -> Microsoft.CodeAnalysis.VisualBasic.SyntaxKind
Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FlagsEnumIsSetToken = 794 -> Microsoft.CodeAnalysis.VisualBasic.SyntaxKind
Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FlagsEnumOperationExpression = 793 -> Microsoft.CodeAnalysis.VisualBasic.SyntaxKind
Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FlagsEnumOperatorSyntax = 797 -> Microsoft.CodeAnalysis.VisualBasic.SyntaxKind
Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FlagsEnumSetToken = 795 -> Microsoft.CodeAnalysis.VisualBasic.SyntaxKind
Overridable Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor(Of TResult).VisitFlagsEnumOperationExpression(node As Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax) -> TResult
Overridable Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitFlagsEnumOperationExpression(node As Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax) -> Void
Overrides Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.Accept(Of TResult)(visitor As Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor(Of TResult)) -> TResult
Overrides Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax.Accept(visitor As Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor) -> Void
Overrides Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitFlagsEnumOperationExpression(node As Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax) -> Microsoft.CodeAnalysis.SyntaxNode
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumClearToken(leadingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList, text As String, trailingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumClearToken(text As String) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumIsAnyToken(leadingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList, text As String, trailingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumIsAnyToken(text As String) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumIsSetToken(leadingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList, text As String, trailingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumIsSetToken(text As String) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumOperationExpression(enumFlags As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax, operatorToken As Microsoft.CodeAnalysis.SyntaxToken, enumFlag As Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumOperationExpression(operatorToken As Microsoft.CodeAnalysis.SyntaxToken) -> Microsoft.CodeAnalysis.VisualBasic.Syntax.FlagsEnumOperationExpressionSyntax
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumOperator(kind As Microsoft.CodeAnalysis.VisualBasic.SyntaxKind, text As String) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumOperator(leadingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList, kind As Microsoft.CodeAnalysis.VisualBasic.SyntaxKind, text As String, trailingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumSetToken(leadingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList, text As String, trailingTrivia As Microsoft.CodeAnalysis.SyntaxTriviaList) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FlagsEnumSetToken(text As String) -> Microsoft.CodeAnalysis.SyntaxToken
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsFlagsEnumOperationExpressionOperatorToken(kind As Microsoft.CodeAnalysis.VisualBasic.SyntaxKind) -> Boolean
Shared Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsFlagsEnumOperator(kind As Microsoft.CodeAnalysis.VisualBasic.SyntaxKind) -> Boolean
